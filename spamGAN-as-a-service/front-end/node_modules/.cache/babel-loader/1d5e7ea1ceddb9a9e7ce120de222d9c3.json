{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shenyankun/react-complete-guide projects/spamgan-as-service/src/Components/Main/Main.js\";\nimport React, { Component } from 'react';\nimport { Input, Upload, message, Layout, Button, Table } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport \"./Main.css\";\nconst {\n  TextArea\n} = Input;\nconst {\n  Header,\n  Content,\n  Footer\n} = Layout;\nconst columns = [{\n  title: 'Review',\n  dataIndex: 'review',\n  width: '80%'\n}, {\n  title: 'Result',\n  dataIndex: 'result',\n  width: '20%'\n}];\nconst reviews = [];\nlet fileReader;\n\nconst getRandomuserParams = params => {\n  return {\n    results: params.pagination.pageSize,\n    page: params.pagination.current,\n    ...params\n  };\n};\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedFile: null,\n      review: null,\n      loading: true,\n      data: [],\n      reviews: [],\n      pagination: {\n        current: 1,\n        pageSize: 10\n      }\n    };\n\n    this.fileReadHandler = () => {\n      const content = fileReader.result;\n      console.log(content);\n      reviews.push(content);\n    };\n\n    this.fileChangeHandler = info => {\n      if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n\n      if (info.file.status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully`);\n      } else if (info.file.status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n        return;\n      }\n\n      this.setState({\n        selectedFile: info.file\n      });\n      fileReader = new FileReader();\n      fileReader.onloadend = this.fileReadHandler;\n      fileReader.readAsText(info.file);\n      this.setState({\n        reviews: reviews\n      });\n      console.log(this.state.reviews);\n    };\n\n    this.reviewChangeHandler = event => {\n      this.setState({\n        review: event.target.value\n      });\n    };\n\n    this.postFileHandler = () => {\n      if (this.state.review) {\n        axios.post('http://3.139.179.60/singleinference', this.state.review, {\n          timeout: 5 * 60 * 1000\n        }).then(response => {\n          console.log(response);\n        });\n      } else if (this.state.selectedFile) {\n        this.setState({\n          loading: true\n        });\n        axios.post('http://3.139.179.60/inference', this.state.selectedFile, {\n          timeout: 5 * 60 * 1000\n        }).then(response => {\n          console.log(response);\n          this.setState({});\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      pagination\n    } = this.state;\n    axios.get('http://3.139.179.60/ping').then(response => {\n      console.log(response);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"test\",\n      className: \"Test\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Content, {\n          style: {\n            maxWidth: '800px',\n            margin: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextArea, {\n            rows: 4,\n            name: \"review\",\n            onChange: this.reviewChangeHandler,\n            style: {\n              width: '800px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginTop: \"30px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Or you can also choose to upload a file. (Only .txt files are acceptable)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 56\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Upload, {\n            accept: \".txt\",\n            onChange: this.fileChangeHandler,\n            name: \"file\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 43\n              }, this),\n              children: \"Click to Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          shape: \"round\",\n          onClick: this.postFileHandler,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/shenyankun/react-complete-guide projects/spamgan-as-service/src/Components/Main/Main.js"],"names":["React","Component","Input","Upload","message","Layout","Button","Table","UploadOutlined","axios","TextArea","Header","Content","Footer","columns","title","dataIndex","width","reviews","fileReader","getRandomuserParams","params","results","pagination","pageSize","page","current","Main","state","selectedFile","review","loading","data","fileReadHandler","content","result","console","log","push","fileChangeHandler","info","file","status","fileList","success","name","error","setState","FileReader","onloadend","readAsText","reviewChangeHandler","event","target","value","postFileHandler","post","timeout","then","response","componentDidMount","get","render","maxWidth","margin","marginTop"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Input, Upload, message, Layout, Button, Table } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport \"./Main.css\";\n\n\nconst { TextArea } = Input;\nconst { Header, Content, Footer } = Layout;\n\n\nconst columns = [\n    {\n        title: 'Review',\n        dataIndex: 'review',\n        width: '80%',\n    },\n    {\n        title: 'Result',\n        dataIndex: 'result',\n        width: '20%',\n    }\n]\n\nconst reviews = [];\nlet fileReader;\n\nconst getRandomuserParams = params => {\n    return {\n      results: params.pagination.pageSize,\n      page: params.pagination.current,\n      ...params,\n    };\n};\n\nclass Main extends Component {\n   \n    state = {\n        selectedFile: null,\n        review: null,\n        loading: true,\n        data: [],\n        reviews: [],\n        pagination: {\n            current: 1,\n            pageSize: 10,\n        }\n    }\n\n    fileReadHandler = () => {\n        const content = fileReader.result;\n        console.log(content);\n        reviews.push(content);\n    }\n\n    fileChangeHandler = (info) => {\n        if (info.file.status !== 'uploading') {\n            console.log(info.file, info.fileList);\n        }\n        if (info.file.status === 'done') {\n            message.success(`${info.file.name} file uploaded successfully`);\n        } else if (info.file.status === 'error') {\n            message.error(`${info.file.name} file upload failed.`);\n            return;\n        }\n        this.setState({selectedFile: info.file});\n        fileReader  = new FileReader();\n        fileReader.onloadend = this.fileReadHandler;\n        fileReader.readAsText(info.file);\n        this.setState({reviews: reviews})\n        console.log(this.state.reviews)\n    }\n\n    reviewChangeHandler = (event) => {\n        this.setState({review: event.target.value})\n    }\n\n    postFileHandler = () => {\n        if (this.state.review) {\n            axios.post('http://3.139.179.60/singleinference', this.state.review, {timeout: 5 * 60 * 1000})\n            .then(response => {\n                console.log(response);\n            });\n        } else if (this.state.selectedFile) {\n            this.setState({loading: true})\n            axios.post('http://3.139.179.60/inference', this.state.selectedFile, {timeout: 5 * 60 * 1000})\n            .then(response => {\n                console.log(response);\n                this.setState({\n\n                })\n            });\n        }\n    }\n    \n    componentDidMount () {\n        const { pagination } = this.state;\n        axios.get( 'http://3.139.179.60/ping' )\n        .then(response => {\n            console.log(response);\n        });\n    }\n\n    render () {\n        return (\n            <section id=\"test\" className=\"Test\">\n                <div>\n                    <Content style={{ maxWidth: '800px', margin: 'auto'}}>\n                        <TextArea\n                            rows={4}\n                            name='review'\n                            onChange={this.reviewChangeHandler}\n                            style={{width: '800px'}} />\n                        <p style={{marginTop: \"30px\"}}><strong>Or you can also choose to upload a file. (Only .txt files are acceptable)</strong> </p>\n                        <Upload \n                            accept=\".txt\" \n                            onChange={this.fileChangeHandler} \n                            name='file'>\n                            <Button icon={<UploadOutlined />}>Click to Upload</Button>\n                        </Upload>\n                    </Content>\n                    <Button type=\"primary\" shape=\"round\" onClick={this.postFileHandler}>Submit</Button>\n                </div>\n                \n            </section>\n        );\n    }\n    \n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}